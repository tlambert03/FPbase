# Generated by Django 2.0.9 on 2018-10-08 18:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('references', '0003_auto_20180804_0203'),
        ('proteins', '0021_auto_20180804_0203'),
    ]

    operations = [
        migrations.CreateModel(
            name='OSERMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('percent', models.FloatField(blank=True, help_text='Photobleaching half-life (s)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Percent Normal Cells')),
                ('percent_stddev', models.FloatField(blank=True, help_text='Standard deviation of percent normal cells (if applicable)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='StdDev')),
                ('percent_ncells', models.IntegerField(blank=True, help_text='Number of cells analyzed in percent normal for this FP', null=True, verbose_name='Number of cells for percent measurement')),
                ('oserne', models.FloatField(blank=True, help_text='Ratio of OSER to nuclear envelope (NE) fluorescence intensities', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='OSER/NE ratio')),
                ('oserne_stddev', models.FloatField(blank=True, help_text='Standard deviation of OSER/NE ratio (if applicable)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='OSER/NE StdDev')),
                ('oserne_ncells', models.IntegerField(blank=True, help_text='Number of cells analyzed in OSER/NE this FP', null=True, verbose_name='Number of cells for OSER/NE measurement')),
                ('celltype', models.CharField(blank=True, help_text='e.g. COS-7, HeLa', max_length=64, verbose_name='Cell Type')),
                ('temp', models.FloatField(blank=True, null=True, verbose_name='Temperature')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='osermeasurement_author', to=settings.AUTH_USER_MODEL)),
                ('protein', models.ForeignKey(help_text='The protein on which this measurement was made', on_delete=django.db.models.deletion.CASCADE, related_name='oser_measurements', to='proteins.Protein', verbose_name='Protein')),
                ('reference', models.ForeignKey(blank=True, help_text='Reference where the measurement was made', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oser_measurements', to='references.Reference', verbose_name='Measurement Reference')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='osermeasurement_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
