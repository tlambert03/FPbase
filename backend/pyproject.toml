# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
DJANGO_SETTINGS_MODULE = "config.settings.test"
FAIL_INVALID_TEMPLATE_VARS = true
addopts = "--reuse-db --cov-config=pyproject.toml"
python_files = ["tests.py", "test_*.py"]
norecursedirs = ["node_modules"]
filterwarnings = [
    "error",
    "ignore:SelectableGroups dict interface is deprecated::",
    "ignore:The DEFAULT_FILE_STORAGE setting is deprecated::",
    "ignore:django.core.files.storage.get_storage_class is deprecated::",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::ResourceWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:Deprecated call to `pkg_resources",
]


# ==== Coverage ====
[tool.coverage.run]
source = ["fpbase", "proteins", "references", "fpseq", "favit"]
omit = ["*/migrations/*", "*/tests/*", "proteins/management/**"]
# plugins = ["django_coverage_plugin"]


# ==== ruff ====
[tool.ruff]
src = ["backend/"]
line-length = 119
target-version = "py311"
exclude = ['*/migrations/*', '*/static/CACHE/*', '.venv']
[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "I",   # isort
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "RUF", # Ruff-specific rules
]
ignore = [
    "B905",   # `zip()` without an explicit `strict=` parameter
    "S101",   # Use of assert detected.
    "RUF012", # Mutable class attributes should be annotated
]
[tool.ruff.lint.per-file-ignores]
"config/settings/*" = ["F405"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.djlint]
