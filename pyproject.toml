[project]
name = "fpbase.org"
version = "1.2.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    'pytz==2023.3.post1',
    'python-slugify==8.0.1',
    'Pillow>=10.0.0',
    'rcssmin>=1.1.1',
    'argon2-cffi==21.3.0',
    'whitenoise[brotli]==6.6.0',
    'redis==5.0.4',
    'psycopg2==2.9.9; platform_system == "Linux"',
    'django<5',
    'django-environ==0.10.0',
    'django-model-utils==4.3.1',
    'django-allauth==0.54.0',
    'django-redis>=5.3.0',
    # NOTE: there's an issue with 1.14 and bootstrap4 forms not having form-control class
    'django-crispy-forms==1.13.0',
    'djangorestframework==3.14.0',
    'drf-spectacular==0.26.3',
    'djangorestframework-csv==2.1.1',
    'django-recaptcha==3.0.0',
    'sentry-sdk>=2.8',
    'biopython==1.83',
    'pandas==2.0.3',
    'parasail==1.3.4',
    'habanero==1.2.3',
    'django-filter==23.3',
    'django-reversion==5.0.10',
    'django-reversion-compare==0.16.2',
    'tablib==3.4.0',
    'scipy==1.14.1',
    'dnspython>=2.6.1',
    'django-anymail==10.0',
    'django-autocomplete-light==3.11.0',
    'django-avatar==7.1.1',
    'numpy==1.26.3',
    'matplotlib==3.7.1',
    'django-mptt==0.14.0',
    'django-webpack-loader==2.0.1',
    'google-auth==2.29.0',
    'google-analytics-data==0.18.9',
    'algoliasearch_django==3.0.0',
    'celery[redis]==5.2.7',
    'graphene>=3.2.2',
    'graphene-django>=3.1.1',
    'graphene-django-optimizer==0.10.0',
    'django-graphql-jwt==0.3.4',
    'django-cors-headers==4.2.0',
    'maxminddb==2.5.1',
]


[dependency-groups]
prod = ["gunicorn>=20.1.0", "django-storages[boto3]>=1.13.2"]
dev = [
    "psycopg2-binary>=2.9.6; platform_system == 'Darwin'",
    "django-coverage-plugin>=3.1.0",
    "django-debug-toolbar>=4.2",
    "django-extensions>=3.2.3",
    "django-stubs>=5.1.3",
    "django-test-plus>=2.2.4",
    "djangorestframework-stubs>=3.15.2",
    "factory-boy==3.2.0",
    "mypy>=1.15.0",
    "pdbpp>=0.10.3",
    "pre-commit>=4.1.0",
    "pylint-django>=2.6.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.10.0",
    "pytest-sugar>=1.0.0",
    "ruff>=0.9.6",
    "selenium>=4.28.1",
    "watchfiles>=0.19.0",
    "werkzeug[watchdog]>=2.3.4",
    "ipython>=8.32.0",
]

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "8.0"
DJANGO_SETTINGS_MODULE = "config.settings.test"
FAIL_INVALID_TEMPLATE_VARS = true
addopts = "--reuse-db --cov-config=pyproject.toml"
python_files = ["tests.py", "test_*.py"]
pythonpath = ["backend"]  # Add this line
norecursedirs = ["node_modules"]
filterwarnings = [
    "error",
    "ignore:SelectableGroups dict interface is deprecated::",
    "ignore:The DEFAULT_FILE_STORAGE setting is deprecated::",
    "ignore:django.core.files.storage.get_storage_class is deprecated::",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::ResourceWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:Deprecated call to `pkg_resources",
]


# ==== Coverage ====
[tool.coverage.run]
source = ["fpbase", "proteins", "references", "fpseq", "favit"]
omit = ["*/migrations/*", "*/tests/*", "proteins/management/**"]
# plugins = ["django_coverage_plugin"]


# ==== ruff ====
[tool.ruff]
src = ["backend/"]
line-length = 119
target-version = "py311"
exclude = ['*/migrations/*', '*/static/CACHE/*', '.venv']
[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "I",   # isort
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "RUF", # Ruff-specific rules
]
ignore = [
    "B905",   # `zip()` without an explicit `strict=` parameter
    "S101",   # Use of assert detected.
    "RUF012", # Mutable class attributes should be annotated
]
[tool.ruff.lint.per-file-ignores]
"backend/config/settings/*" = ["F405"]


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.djlint]
