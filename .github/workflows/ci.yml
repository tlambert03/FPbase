name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["develop", "main"]
  push:
    branches: ["develop", "main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # With no caching at all the entire ci process takes 4m 30s to complete!
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
    env:
      CELERY_BROKER_URL: "redis://localhost:6379/0"
      # postgres://user:password@host:port/database
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      UV_FROZEN: 1
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
          enable-cache: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install node Dependencies
        run: pnpm install

      - run: uv sync

      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@v2

      - name: Configure headless display
        run: |
          echo "DISPLAY=:99.0" >> $GITHUB_ENV
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3

      - name: Test
        run: uv run pytest --color=yes -v --cov --cov-report=xml --cov-report=term-missing

      - name: coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
